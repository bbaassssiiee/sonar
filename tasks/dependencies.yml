---

- name: 'make sure postgresql packages are installed'
  become: yes
  yum:
    state: present
    name:
      - 'unzip'
      - 'python-psycopg2'
      - 'python-psycopg2-doc'
  when: features.postgresql|bool and ansible_os_family == "RedHat"
  tags:
    - sonar
    - database
    - postgresql
    - redhat

- name: 'make sure postgresql packages, unzip & JRE are installed'
  become: yes
  apt:
    state: present
    name:
      - 'default-jre'
      - 'python'
      - 'postgresql'
      - 'postgresql-contrib'
      - 'python-psycopg2'
      - 'python-psycopg2-doc'
      - 'unzip'
  when: features.custom_postgres|bool and ansible_os_family == "Debian"
  tags:
    - sonar
    - database
    - postgresql
    - ubuntu

- name: 'make sure mysql packages, unzip & JRE are installed'
  become: yes
  apt:
    state: present
    name:
      - 'default-jre'
      - 'python'
      - 'python-mysql'
      - 'mysql-server'
      - 'mysql-client'
      - 'unzip'
  when: features.mysql|bool and ansible_os_family == "Debian"
  tags:
    - sonar
    - database
    - mysql
    - ubuntu

- name: 'Install MySQL-python when sonar needs it'
  yum:
    name: MySQL-python
    state: present
  when: features.mysql and ansible_os_family == "RedHat"
  tags:
    - sonar
    - database
    - mysql

- name: 'sonar could use either postgresql or mysql'
  service:
    name: mysql
    state: started
  when: features.mysql|bool
  ignore_errors: yes
  tags:
    - sonar
    - database
    - mysql

- name: 'sonar could use either postgresql or mysql'
  service:
    name: postgresql-9.5
    state: started
  when: features.postgresql|bool
  ignore_errors: yes
  tags:
    - sonar
    - database
    - postgresql

- name: 'verify presence of Sonar'
  stat:
    path: "{{ sonar_home }}/bin/sonar"
  register: sonar_installed
  tags:
    - sonar

- name: 'create sonar group'
  group:
    name: sonar
  tags:
    - sonar

- name: 'create sonar user'
  user:
    name: sonar
    group: sonar
    home: "{{ sonar_home }}"
  tags:
    - sonar

- name: 'download Sonar'
  get_url:
    url: "{{ sonar_url }}"
    dest: ~
    validate_certs: false
  retries: 3
  when: not sonar_installed.stat.exists
  tags:
    - sonar

- name: 'create directory for Sonar installations'
  file:
    dest: "{{ sonar_home }}"
    state: directory
    owner: sonar
    group: sonar
    mode: 0755
  tags:
    - sonar

- name: 'unzip Sonar'
  unarchive:
    src: "/root/{{ sonar_file }}"
    dest: "{{ sonar_home }}"
    keep_newer: True
    remote_src: True

- name: 'fix directory for Sonar'
  file:
    dest: "{{ sonar_home }}"
    recurse: true
    owner: sonar
    group: sonar
  tags:
    - sonar

- name: 'install Sonar as a service'
  template:
    src: sonar.service
    dest: /etc/systemd/system
  tags:
    - sonar
    - sonarservice
